<div class="openall">
  
  long / int shorthand <b><span>32L i.e. long version of the number 32</span></b>

  octal <b>base 8. Append "0" to number</b>

  hexadecimal <b>base 17. Append "0x" to number</b>

  scientific notation <b>
    <span>4.7281 X 10^4 == 47,281</span>
    <span>2.4791 X 10^2 == 247.91</span>
    <span>7.2 X 10^-4 == 0.00072</span>
    <span>2.9 X 10^6 == 2,900,000</span>
    4.7281 is the mantissa, 4 is the power of 10
  </b>

  Floating point literal <b>
    using scientific notation: <span>2xE-4</span>
    using decimal notation (with float warning): <span>.0002f</span>
  </b>

  Integer and floating point converstion <b>
    The decimal part is discarded.
    Watch out for stack overflow, since floats can be larger than integers.

    During division, remainers are dropped when diving integers
  </b>

  Using different data types in operations <b>
    If a float and integer are operated upon, the result is a float
  </b>

  Module <b>
    Only work on integers
    use <span>fmod</span> for doubles
  </b>

  Operator precedence <b>
    - (unary negation)
    * (multiply)
    / (divide)
    % (modulo)
    + (add)
    - (subtract)
  </b>

  Exponents <b>
    <span>#include &lt;cmath&gt; </span>
    then use <span>pow(2, 4)</span> which equals 8.
  </b>

  More math functions <b>
    Absolute value      - abs(x)
    Exponent            - exp(x)
    modulus for doubles - fmod(x, y)
    Logarithms          - log(x), log10(x)
    Trig                - cos(x), sin(x), tan(x)
    Square root         - sqrt(x)
    Random              - rand(x)
  </b>



</div>